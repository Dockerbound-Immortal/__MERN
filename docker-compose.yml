version: '3.8'

networks: 
  app-network: 
    driver: bridge

volumes:
  dbdata: 

services:

  client:
    build: 
      context: ./client
      dockerfile: Dockerfile.dev
    # ports: 
    #   - "3000:3000"
    volumes:  
      - ./client/src:/usr/app/src
    tty: true 
    stdin_open: true
    environment:
      CLIENT_PORT: "3000"
      CHOKIDAR_USEPOLLING: "true"
    networks:
      - app-network

  api: 
    build:
      context: ./api
      dockerfile: Dockerfile.dev
    # ports: 
    #   - "4000:4000"
    volumes:
      - ./api/src:/usr/app/src
    environment:
      PORT: "4000"
      CHOKIDAR_USEPOLLING: "true"
    networks: 
      - app-network

  api_mongo: 
    image: mongo:3.6.23-xenial
    restart: always
    volumes: 
      - ./infra/db/data:/data/db
    # environment: 
    #   MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USER}
    #   MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD}
    #   MONGO_INITDB_DATABASE: app_db
    networks: 
      - app-network
      
  mongo-express:
    image: mongo-express
    restart: always
    ports: 
      - "8081:8081"
    environment: 
        ME_CONFIG_MONGODB_SERVER: api_mongo
        ME_CONFIG_MONGODB_PORT: 27017
        # ME_CONFIG_MONGODB_ENABLE_ADMIN: "true"
        # ME_CONFIG_MONGODB_AUTH_DATABASE: admin
        # ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_ROOT_USER}
        # ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_ROOT_PASSWORD}
        # ME_CONFIG_BASICAUTH_USERNAME: ${MONGOEXPRESS_LOGIN}
        # ME_CONFIG_BASICAUTH_PASSWORD: ${MONGOEXPRESS_PASSWORD}
    networks: 
      - app-network
    depends_on:
      - api_mongo

  nginx: 
    image: nginx:1.19.8-alpine
    ports: 
      - "8080:80"
    volumes: 
      - ./infra/webserver/nginx/nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - client 
      - api
    networks:
      - app-network